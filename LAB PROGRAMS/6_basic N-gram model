import random

def build_bigram_model(corpus):
    bigram_model = {}
    for i in range(len(corpus) - 1):
        current_word = corpus[i]
        next_word = corpus[i + 1]
        if current_word in bigram_model:
            bigram_model[current_word].append(next_word)
        else:
            bigram_model[current_word] = [next_word]
    return bigram_model

def generate_text_bigram(bigram_model, seed_word, length=10):
    generated_text = [seed_word]
    current_word = seed_word

    for _ in range(length - 1):
        if current_word in bigram_model:
            next_word_options = bigram_model[current_word]
            next_word = random.choice(next_word_options)
            generated_text.append(next_word)
            current_word = next_word
        else:
            break

    return ' '.join(generated_text)

# Example usage
corpus = "This is a simple example for building a bigram model in Python. This model predicts the next word based on the previous word in the sequence.".split()
bigram_model = build_bigram_model(corpus)
generated_text = generate_text_bigram(bigram_model, seed_word="Python", length=15)
print(generated_text)
